---
### provision AWS EC2 instance
- hosts: localhost
  connection: local
  gather_facts: false
  user: root
  pre_tasks:
    - include_vars: variables.yml
  tasks:
    - name: Provision {{ ec2_wincount }} instances with tag {{ ec2_wintag_Role }}
      local_action:
        module: ec2
        key_name: "{{ ec2_winkeypair }}"
        group_id: "{{ ec2_winsecurity_group_id }}"
        instance_type: "{{ ec2_wininstance_type }}"
        image: "{{ ec2_winimage }}"
        vpc_subnet_id: "{{ ec2_winsubnet_id }}"
        region: "{{ ec2_winregion }}"
        instance_tags: '{"Type":"{{ec2_wininstance_type}}", "Role":"{{ec2_wintag_Role}}"}'
        assign_public_ip: yes
        wait: true
        exact_count: "{{ ec2_wincount }}"
        count_tag:
          Role: "{{ ec2_wintag_Role }}"
        user_data: | 
         <powershell>
         $admin = [adsi]("WinNT://./administrator, user")
         $admin.PSBase.Invoke("SetPassword", "myTempPassword123!")
         Invoke-Expression ((New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1'))
         </powershell> 
        volumes:
          - device_name: /dev/xvda
            volume_type: gp2
            volume_size: "{{ ec2_winvolume_size }}"
            delete_on_termination: true
      register: ec2

    - debug:
        var: ec2
